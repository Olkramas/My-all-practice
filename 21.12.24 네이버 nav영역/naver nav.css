*{
    box-sizing: border-box;
}
html body{
    margin: 0;
    padding: 0;
}
#logo_area{
    margin: 0 auto;
    width: 1130px;
    height: 160px;
    position: relative;
    top: 15px;

}
.center_align{
    /* display: inline-block;으로 설정하면 중앙 정렬이 안됨*/
    margin: 0 auto;
    width: 1130px;
}
#logo_area a{
    display: inline-block;
    width: 222px;
    height: 52px;
    background: url(sp_search.png) -4px -4px no-repeat;
    vertical-align: middle;
    position: relative;
    top: 0px;
    right: -12px;
}

#logo_area h1{
    display: none;
}
#logo_area fieldset{
    display: inline-block;
    width: 582px;
    height: 52px;
    border: 2px solid #19ce60;
    padding: 12px 0 12px 10px;
    vertical-align: middle;
    position: relative;
}
#logo_area input{
    width: 405px;
    height: 23px;
    border: none;
    padding: 0;
    vertical-align: top;
    outline: none;
}
#logo_area fieldset button{
    width: 51px;
    height: 51px;
    border: none;
    padding: 0;
    background-color: #19ce60;
    position: absolute;
    right: -2px;
    top: -1px;
}
#search_image{
    background-image: url(sp_search.png);
    background-position: -4px -60px;
    background-repeat: no-repeat;
    width: 21px;
    height: 21px;
    display: inline-block;
    margin: 15px;
}
.blind {
    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    margin: -1px;
    width: 1px;
    height: 1px;
}
#top_menu{
    display: block;
    float: right;

}
nav ul{
    margin: 0;
    padding: 0;
    list-style: none;
}
nav li{
    display: inline-block;
}
nav li span:first-child{
    display: inline-block;
    height: 16px;
    background-image: url(./sp_nav.png);
    background-repeat: no-repeat;
    /* 공통된 건 이렇게 하나로 묶어서 적어버리면 줄 수가 엄청 줄어듦.
    두개는 아니고 세개정도 이렇게 겹치면 확신을 가지고 묶어버리는게 좋음. */
    margin-left: 8px;
    /* 첫번째 빼고 margin-left를 넣고 싶은 상황.
    공통된 곳에 margin-left를 입력하고, 첫번째에 margin-left 0;을 입력하면 됨. */
    /*
    css에서 아래 있다고 밑에 있는것을 덮어씌우는게 아님.
    하나의 태그에 중첩해서 css가 적용됐을때 우선순위를 정하는 것 cascading
    -css우선순위
    1. 기본적으로 더 아래에 나오는 css가 우선순위가 높음.
    2. !important > inline style 속성 > div id > 의사 클래스(의사 클래스) > class 속성 > 일반 태그 
    3. 우선순위가 같으면 개수가 많은 css가 우선순위가 높음
    nav li:first-child span:first-child 에서 
    nav li:first-child span:first-child:first-child:first-child
    이런식으로 하면 얘가 우선순위로 됨. 
*/
}
nav li:first-child span:first-child{
    /* nav안에 li를 선택하는데 그중 첫번째 자식 선택
    span도 두개라서 그 중에서 첫번째 자식을 선택한 것*/
    width: 25px;
    background-position: 0 -285px;
    margin-left: 0;
}
nav li:nth-child(2) span:first-child{
    width: 27px;
    background-position: -279px -52px;
    /* box-sizing: border-box;때문에 패딩이 의미가 없음. */
}
nav li:nth-child(3) span:first-child{
    width: 41px;
    background-position: -101px -182px;
}
/* .
.
.
.
마지막은 nav li:last-child span:first-child
nth 쓰지말고 last쓰면 됨
그리고 실무에서는 nth를 쓰면 유지,보수에서 엄청 힘듦.
이렇게 하나하나 다 하면 나중에 바꿀때도 힘들기 때문. */
/* nth child는 순서에 의존하기 때문에 css를 처음부터 다 바꿔야 되는 상황이 생김
차라리 div id를 줘서 하는게 나중을 위해서 더 나을 수 있음. */
#search_bar{
    display: inline-block;
    top: 38px;
    position: relative;
/* search_bar(형제태그)가 float의 영역을 만약 침범한다 그러면
clear: both;로 search_bar를 내려 줄 수 있음(영역이 겹치는 부분에 사용). 지금 내가 짠 코드는 서로 전혀 겹치는
부분이 없어서 clear: both;로 해결이 안돼서 포지션으로 만졌음.  */
}
/* float을 사용해서 top메뉴를 우측 상단으로 올렸지만,
center_align이 부모 태그로 search_bar가 float을 감싸는 상황이 되었음.
  나는 topmenue랑 searchbar 랑 아에 다른 div로 묶어서 float은 그대로 설정하고
  searchbar는 display: inline-block으로 float밑에 블록 포멧팅 컨텍스트를 만들어서 
  감싸는 것을 막음. overflow는 안됨..*/

/* id, class는 두단어로 만들기. div id는 한번밖에 못쓰기 때문에 두단어로 조합하는게 편함
class는 여러번 쓰기 때문에 한단어 이상으로 조합하기.
-,_,--, .. 등등 명명법이 회사마다 방식이 있음.
크롤링(웹사이트 데이터를 가져간는 행위) 때문에 외계어로 명명된 경우도 있음. */
#top_menu span:first-child{
    height: 21px;
    color: #888;
    letter-spacing: -1px;
    font-size: 11px;
}